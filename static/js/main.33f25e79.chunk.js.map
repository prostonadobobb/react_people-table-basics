{"version":3,"sources":["pages/HomePages.tsx","api.ts","pages/PersonLink.tsx","components/Loader/Loader.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","Loader","PeoplePage","useParams","useState","people","setPeople","isLoader","setIsLoader","errorMessage","setErrorMessage","useEffect","data","catch","finally","selectedPerson","find","getParent","personParent","parent","length","map","born","died","motherName","fatherName","NotFoundPage","App","getActivePage","isActive","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.33f25e79.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoader, setIsLoader] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => {\n        setPeople(data);\n      })\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => {\n        setIsLoader(false);\n      });\n  }, []);\n\n  const selectedPerson = people.find(person => person.slug === slug);\n\n  const getParent = (personParent: string) => {\n    const parent = people.find(person => person.name === personParent);\n\n    return parent ? <PersonLink person={parent} /> : personParent;\n  };\n\n  return (\n    <>\n      {errorMessage && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          {errorMessage}\n        </p>\n      )}\n\n      {(!people.length && !isLoader) && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {isLoader && <Loader />}\n\n      {(people && !isLoader) && (\n        <>\n          <h1 className=\"title\">People Page</h1>\n          <div className=\"box table-container\">\n\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames({\n                      // eslint-disable-next-line max-len\n                      'has-background-warning': selectedPerson?.slug === person.slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.motherName ? getParent(person.motherName) : '-'}\n                    </td>\n\n                    <td>\n                      {person.fatherName ? getParent(person.fatherName) : '-'}\n                    </td>\n                  </tr>\n                ))}\n\n              </tbody>\n            </table>\n\n          </div>\n        </>\n      )}\n\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { HomePage } from './pages/HomePages';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => {\n  const getActivePage = ({ isActive } : { isActive: boolean }) => {\n    return classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive });\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={getActivePage} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getActivePage}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n\n          <div className=\"block\">\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n              <Route path=\"people\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":slug\" element={<PeoplePage />} />\n              </Route>\n\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}