{"version":3,"sources":["pages/HomePages.tsx","api.ts","components/Loader/Loader.tsx","pages/PersonLink.tsx","pages/PersonItem.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","MainContent.tsx","NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PersonItem","human","people","selectedPerson","find","p","getParent","personParent","parent","born","died","motherName","fatherName","renderFather","PeoplePage","useParams","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","catch","finally","length","map","NotFoundPage","MainContent","path","element","replace","index","NavBar","getActivePage","isActive","role","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5c4d3f52.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n  slug: string | undefined\n};\n\n// eslint-disable-next-line max-len\nexport const PersonItem: React.FC<Props> = ({ person, people, slug }) => {\n  const selectedPerson = people.find(p => p.slug === slug);\n\n  const getParent = (personParent: string) => {\n    const parent = people.find(p => p.name === personParent);\n\n    return parent ? <PersonLink person={parent} /> : personParent;\n  };\n\n  const renderMother = (human: Person) => {\n    return human.motherName ? getParent(human.motherName) : '-';\n  };\n\n  const renderFather = (human: Person) => {\n    return human.fatherName ? getParent(human.fatherName) : '-';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={classNames({\n        // eslint-disable-next-line max-len\n        'has-background-warning': selectedPerson?.slug === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {renderMother(person)}\n      </td>\n\n      <td>\n        {renderFather(person)}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { PersonItem } from './PersonItem';\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {errorMessage && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          {errorMessage}\n        </p>\n      )}\n\n      {(!people.length && !isLoading) && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {isLoading && <Loader />}\n\n      {(people && !isLoading) && (\n        <>\n          <h1 className=\"title\">People Page</h1>\n          <div className=\"box table-container\">\n\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonItem\n                    person={person}\n                    people={people}\n                    slug={slug}\n                    key={person.slug}\n                  />\n                ))}\n\n              </tbody>\n            </table>\n\n          </div>\n        </>\n      )}\n\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './pages/HomePages';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const MainContent = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"block\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  const getActivePage = ({ isActive } : { isActive: boolean }) => {\n    return classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getActivePage} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getActivePage}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { MainContent } from './MainContent';\nimport { NavBar } from './NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n      <MainContent />\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}